services:
  postgres:
    image: postgres:15
    container_name: app-postgres
    environment:
      POSTGRES_DB: applicationtracker
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: spring-app
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    ports:
      - "8080:8080"
    environment:
      # db
      SPRING_DATASOURCE_URL: ${DB_URL}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      # jpa
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      # other env
      AZURE_BLOB_CONTAINER_NAME: ${AZURE_BLOB_CONTAINER_NAME}
      AZURE_CONNECTION_STRING: ${AZURE_CONNECTION_STRING}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      JWT_SECRET: ${JWT_SECRET}

volumes:
  postgres_data: